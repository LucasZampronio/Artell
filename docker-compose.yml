version: '3.8'

services:
  # MongoDB
  db:
    image: mongo:7.0
    container_name: artell-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: artell
    ports:
      - "27018:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - artell-network

  # Backend FastAPI
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: artell-backend
    restart: unless-stopped
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
    environment:
      - MONGODB_URI=mongodb://admin:password123@db:27017/artell?authSource=admin
      - GROQ_API_KEY=${GROQ_API_KEY}
      - DEBUG=True
    depends_on:
      - db
    networks:
      - artell-network

  # MongoDB Express
  mongo-express:
    image: mongo-express:1.0.0
    container_name: artell-mongo-express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@db:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password123
    ports:
      - "8082:8081"
    depends_on:
      - db
    networks:
      - artell-network

  # Frontend React (Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: artell-frontend
    restart: unless-stopped
    ports:
      - "5173:3000"
    depends_on:
      - backend
    networks:
      - artell-network
    environment:
      - NODE_ENV=development
    command: npm run dev -- --host 0.0.0.0


volumes:
  mongodb_data:
    driver: local

networks:
  artell-network:
    driver: bridge
